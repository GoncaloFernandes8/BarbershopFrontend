import{a as p,b as l}from"./chunk-KLHZ4TTL.js";import{Ba as i,k as t,n as s,q as a,t as n}from"./chunk-VTAVQ2BQ.js";var h=class o{http=n(i);errorHandler=n(l);API=p.apiUrl;login(r){return this.http.post(`${this.API}/auth/login`,r).pipe(s(e=>{localStorage.setItem("auth_token",e.token),localStorage.setItem("refresh_token",e.refreshToken),localStorage.setItem("auth_user",JSON.stringify(e.user)),this.errorHandler.showSuccess("Login realizado com sucesso!")}),t(e=>(this.errorHandler.showError("Erro ao fazer login. Verifique suas credenciais."),this.errorHandler.handleError(e))))}register(r){return this.http.post(`${this.API}/auth/register`,r).pipe(s(()=>{this.errorHandler.showSuccess("Conta criada com sucesso! Verifique seu email.")}),t(e=>(this.errorHandler.showError("Erro ao criar conta. Tente novamente."),this.errorHandler.handleError(e))))}verifyEmail(r){return this.http.post(`${this.API}/auth/verify`,{token:r}).pipe(t(e=>this.errorHandler.handleError(e)))}resendVerification(r){return this.http.post(`${this.API}/auth/verify/resend`,{email:r}).pipe(t(e=>this.errorHandler.handleError(e)))}refreshToken(){let r=localStorage.getItem("refresh_token");if(!r)throw new Error("No refresh token available");return this.http.post(`${this.API}/auth/refresh`,{refreshToken:r}).pipe(s(e=>{localStorage.setItem("auth_token",e.token),localStorage.setItem("refresh_token",e.refreshToken),localStorage.setItem("auth_user",JSON.stringify(e.user))}),t(e=>(this.logout(),this.errorHandler.handleError(e))))}logout(){localStorage.removeItem("auth_token"),localStorage.removeItem("refresh_token"),localStorage.removeItem("auth_user"),this.errorHandler.showInfo("Sess\xE3o encerrada com sucesso.")}get user(){let r=localStorage.getItem("auth_user");return r?JSON.parse(r):null}get isApproved(){let r=this.user;return!!r&&(r.status??"APPROVED")==="APPROVED"}static \u0275fac=function(e){return new(e||o)};static \u0275prov=a({token:o,factory:o.\u0275fac,providedIn:"root"})};export{h as a};
